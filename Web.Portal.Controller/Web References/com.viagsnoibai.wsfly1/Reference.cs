//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Web.Portal.Controller.com.viagsnoibai.wsfly1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ALSSoap", Namespace="http://tempuri.org/")]
    public partial class ALS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getLichBay_DenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLichBay_DiOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCPMOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ALS() {
            this.Url = global::Web.Portal.Controller.Properties.Settings.Default.Web_Portal_Controller_com_viagsnoibai_wsfly1_ALS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getLichBay_DenCompletedEventHandler getLichBay_DenCompleted;
        
        /// <remarks/>
        public event getLichBay_DiCompletedEventHandler getLichBay_DiCompleted;
        
        /// <remarks/>
        public event getCPMCompletedEventHandler getCPMCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLichBay_Den", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getLichBay_Den(string NgayBay, string U_ID, string U_Key) {
            object[] results = this.Invoke("getLichBay_Den", new object[] {
                        NgayBay,
                        U_ID,
                        U_Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getLichBay_DenAsync(string NgayBay, string U_ID, string U_Key) {
            this.getLichBay_DenAsync(NgayBay, U_ID, U_Key, null);
        }
        
        /// <remarks/>
        public void getLichBay_DenAsync(string NgayBay, string U_ID, string U_Key, object userState) {
            if ((this.getLichBay_DenOperationCompleted == null)) {
                this.getLichBay_DenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLichBay_DenOperationCompleted);
            }
            this.InvokeAsync("getLichBay_Den", new object[] {
                        NgayBay,
                        U_ID,
                        U_Key}, this.getLichBay_DenOperationCompleted, userState);
        }
        
        private void OngetLichBay_DenOperationCompleted(object arg) {
            if ((this.getLichBay_DenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLichBay_DenCompleted(this, new getLichBay_DenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLichBay_Di", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getLichBay_Di(string NgayBay, string U_ID, string U_Key) {
            object[] results = this.Invoke("getLichBay_Di", new object[] {
                        NgayBay,
                        U_ID,
                        U_Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getLichBay_DiAsync(string NgayBay, string U_ID, string U_Key) {
            this.getLichBay_DiAsync(NgayBay, U_ID, U_Key, null);
        }
        
        /// <remarks/>
        public void getLichBay_DiAsync(string NgayBay, string U_ID, string U_Key, object userState) {
            if ((this.getLichBay_DiOperationCompleted == null)) {
                this.getLichBay_DiOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLichBay_DiOperationCompleted);
            }
            this.InvokeAsync("getLichBay_Di", new object[] {
                        NgayBay,
                        U_ID,
                        U_Key}, this.getLichBay_DiOperationCompleted, userState);
        }
        
        private void OngetLichBay_DiOperationCompleted(object arg) {
            if ((this.getLichBay_DiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLichBay_DiCompleted(this, new getLichBay_DiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCPM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCPM(string NgayBay, string ChuyenBay, string U_ID, string U_Key) {
            object[] results = this.Invoke("getCPM", new object[] {
                        NgayBay,
                        ChuyenBay,
                        U_ID,
                        U_Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCPMAsync(string NgayBay, string ChuyenBay, string U_ID, string U_Key) {
            this.getCPMAsync(NgayBay, ChuyenBay, U_ID, U_Key, null);
        }
        
        /// <remarks/>
        public void getCPMAsync(string NgayBay, string ChuyenBay, string U_ID, string U_Key, object userState) {
            if ((this.getCPMOperationCompleted == null)) {
                this.getCPMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCPMOperationCompleted);
            }
            this.InvokeAsync("getCPM", new object[] {
                        NgayBay,
                        ChuyenBay,
                        U_ID,
                        U_Key}, this.getCPMOperationCompleted, userState);
        }
        
        private void OngetCPMOperationCompleted(object arg) {
            if ((this.getCPMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCPMCompleted(this, new getCPMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getLichBay_DenCompletedEventHandler(object sender, getLichBay_DenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLichBay_DenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLichBay_DenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getLichBay_DiCompletedEventHandler(object sender, getLichBay_DiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLichBay_DiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLichBay_DiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCPMCompletedEventHandler(object sender, getCPMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCPMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCPMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591